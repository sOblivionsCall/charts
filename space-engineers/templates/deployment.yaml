apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "space-engineers.fullname" . }}
  labels:
    {{- include "space-engineers.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "space-engineers.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "space-engineers.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}   
      {{- end }}
      serviceAccountName: {{ include "space-engineers.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: ubuntu:xenial
          command: ['bash', '-c']
          args: 
            - echo "Installing required packages";
              apt-get update && apt-get install wget unzip -y;
              echo "Ensuring Directory Structure is Correct";
              mkdir -p /appdata/space-engineers/SpaceEngineersDedicated;
              mkdir -p /appdata/space-engineers/steamcmd; 
              mkdir -p /appdata/space-engineers/World; 
              mkdir -p /appdata/space-engineers/Plugins;
              echo "Directory Check Complete";
              echo "Checking if World exists";
              if [ ! -f /appdata/space-engineers/World/*.sbc ]; then 
                echo "World not found, initalizing empty star system..."; 
                wget https://github.com/mmmaxwwwell/space-engineers-dedicated-docker-linux/blob/main/star-system.zip?raw=true; 
                unzip star-system.zip?raw=true -d /appdata/space-engineers; 
                mv /appdata/space-engineers/SpaceEngineers-Dedicated.cfg /appdata/space-engineers/SpaceEngineersDedicated/;
                echo "Done"; 
              fi;
              echo "Checking for Plugins to install";
              if [ -f /plugins/pluginids ]; then
                echo "Found Plugins to install";
                add-apt-repository multiverse;
                dpkg --add-architecture i386;
                apt-get update;
                echo steam steam/question select "I AGREE" | debconf-set-selections;
                apt-get install steamcmd -y;
                while IFS="" read -r p || [ -n "$p" ]; do
                  echo "Installing $p";
                  /usr/games/steamcmd +login anonymous +force_install_dir /appdata/space-engineers/Plugins +api_logging enabled verbose +workshop_download_item 298740 $p +quit;
                  touch /appdata/space-engineers/Plugins/${p}.dll;
                done < /plugins/pluginids;
              else
                echo "No Plugins found, skipping";
              fi;
              echo "Fix Permissions";
              chmod -R 777 /appdata;
              echo "Complete";
          volumeMounts:
          - name: appdata
            mountPath: /appdata
          {{- if .Values.plugins }}
          - name: plugins
            mountPath: /plugins
          {{- end}}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: tcp
              containerPort: 8080
              protocol: TCP
            - name: udp
              containerPort: 27016
              protocol: UDP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: TCP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: TCP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /
              port: TCP
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: appdata
            mountPath: /appdata
      volumes:
      - name: appdata
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "space-engineers.fullname" . }}-space-engineers{{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.plugins }}
      - name: plugins
        configMap:
          name: {{ .Chart.Name }}-plugins
      {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
